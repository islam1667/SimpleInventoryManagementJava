package com.company.swingUI.JPanels;

import com.company.bean.Product;
import com.company.dataAccess.implementation.ProductDAO;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import com.company.swingUI.Config;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;


/**
 *
 * @author islam
 */
public class JPanelBrowse extends javax.swing.JPanel {

    /**
     * Creates new form JPanelBrowse
     */
    public JPanelBrowse() {
        initComponents();
        configureTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchJTextPane = new javax.swing.JTextPane();
        searchJButton = new javax.swing.JButton();
        showAllJButton = new javax.swing.JButton();

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Part_Name", "Part_Description", "Part_Number", "Part_Price", "Part_Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Quick Search:");

        jScrollPane1.setViewportView(searchJTextPane);

        searchJButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        searchJButton.setText("Search");
        searchJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJButtonActionPerformed(evt);
            }
        });

        showAllJButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        showAllJButton.setText("Show all product");
        showAllJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(showAllJButton)
                    .addComponent(searchJButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(114, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(searchJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showAllJButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void configureTable() {
        DefaultTableModel model = new DefaultTableModel(
                Product.getTableColumnNames(), 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

        };
        jTable.setModel(model);
        jTable.getColumnModel().getColumn(Config.DATA_COL).setMaxWidth(0);
        jTable.getColumnModel().getColumn(Config.N_COL).setMaxWidth(50);
        
        
        jTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    int row = jTable.rowAtPoint(e.getPoint());
                    showProductEditDialog((Product) jTable.getValueAt(row, Config.DATA_COL));
                }
            }
        });
    }

    private void showProductEditDialog(Product p) {
        JTextField pName = new JTextField(p.getName());
        JTextField pNumber = new JTextField(p.getProductNumber());
        JTextField pDesc = new JTextField(p.getDescription());
        JTextField pCompany = new JTextField(p.getCompany());
        JSpinner pBuyPrice = new JSpinner(new SpinnerNumberModel(0.0, 0.0, Integer.MAX_VALUE, 1.0));
        pBuyPrice.setValue(p.getBuyPrice());
        JSpinner pSellPrice = new JSpinner(new SpinnerNumberModel(0.0, 0.0, Integer.MAX_VALUE, 1.0));
        pSellPrice.setValue(p.getSellPrice());

        final JComponent[] inputs = new JComponent[]{
            new JLabel("Part Name: "), pName,
            new JLabel("Part Number: "), pNumber,
            new JLabel("Part Description"), pDesc,
            new JLabel("Part Buy Price"), pBuyPrice,
            new JLabel("Part Sell Price"), pSellPrice,
            new JLabel("Part Company"), pCompany,};

        int result = JOptionPane.showConfirmDialog(null, inputs, "My custom dialog", JOptionPane.OK_CANCEL_OPTION);
        
        if (result == JOptionPane.OK_OPTION) {
            Product edited = new Product(p);
            edited.setName(pName.getText());
            edited.setProductNumber(pNumber.getText());
            edited.setDescription(pDesc.getText());
            edited.setBuyPrice((double)pBuyPrice.getValue());
            edited.setSellprice((double)pSellPrice.getValue());
            edited.setCompany(pCompany.getText());
            int success = new ProductDAO().updateProduct(p.getId(), edited);
            if(success == 0){
                JOptionPane.showMessageDialog(this, "There is no record within dates.");
            }
            System.out.println("You entered: "
                    + pName.getText() + "|"
                    + pNumber.getText() + "|"
                    + pDesc.getText() + "|"
                    + pBuyPrice.getValue() + "|"
                    + pSellPrice.getValue() + "|"
                    + pCompany.getText());
            this.showAll();
        } else {
            System.out.println("User canceled / closed the dialog, result = " + result);
        }
    }

    private void searchJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJButtonActionPerformed
        String searchInput = searchJTextPane.getText();
        ProductDAO dao = new ProductDAO();
        List<Product> products = dao.getSearch(searchInput);

        //Object[]{this, this.name , this.productNumber , this.description , this.quantity, this.price , this.getTotalPrice()};
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        model.setRowCount(0);

        int row=0;
        for (Product p : products) {
            model.addRow(p.toTableRow(row));
            row++;
        }
        jTable.setModel(model);
        jTable.getColumnModel().getColumn(Config.DATA_COL).setPreferredWidth(0);
        jTable.getColumnModel().getColumn(Config.N_COL).setPreferredWidth(40);
    }//GEN-LAST:event_searchJButtonActionPerformed

    private void showAllJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllJButtonActionPerformed
        showAll();
    }//GEN-LAST:event_showAllJButtonActionPerformed

    private void showAll(){
        ProductDAO dao = new ProductDAO();
        List<Product> products = dao.getAllProduct();

        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        model.setRowCount(0);

        int row=0;
        for (Product p : products) {
            model.addRow(p.toTableRow(row));
            row++;
        }

        jTable.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JButton searchJButton;
    private javax.swing.JTextPane searchJTextPane;
    private javax.swing.JButton showAllJButton;
    // End of variables declaration//GEN-END:variables
}
